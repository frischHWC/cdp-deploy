---
- name: Check CM is no-TLS
  uri:
    url: "http://{{ cloudera_manager_host }}:7180/"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200, -1
    return_content: yes
    validate_certs: no
  register: cluster_deployment

- name: DEBUG - API Call
  debug:
    msg: "{{ cluster_deployment }}"
  when: debug | default(false)

- set_fact:
    cloudera_manager_protocol: http
    cloudera_manager_port: 7180
  when: cluster_deployment.status == 200


- name: Check CM is TLS
  uri:
    url: "https://{{ cloudera_manager_host }}:7183/"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200, -1
    return_content: yes
    validate_certs: no
  register: cluster_deployment

- name: DEBUG - API Call
  debug:
    msg: "{{ cluster_deployment }}"
  when: debug | default(false)

- set_fact:
    cloudera_manager_protocol: https
    cloudera_manager_port: 7183
  when: cluster_deployment.status == 200


- set_fact:
    cloudera_manager_url: "{{ cloudera_manager_protocol }}://{{ cloudera_manager_host }}:{{ cloudera_manager_port }}"

- name: Get CM API Version
  uri:
    url: "{{ cloudera_manager_url }}/api/version"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
  register: cloudera_manager_api_version_response

- set_fact:
    cloudera_manager_api_version: "{{ cloudera_manager_api_version_response.content }}"

- set_fact:
    cloudera_manager_api_url: "{{ cloudera_manager_url }}/api/{{ cloudera_manager_api_version }}"

- name: DEBUG - cloudera_manager_api_version
  debug:
    msg: "{{ cloudera_manager_api_version }}"
  when: debug | default(false)

- name: DEBUG - cloudera_manager_protocol
  debug:
    msg: "{{ cloudera_manager_protocol }}"
  when: debug | default(false)

- name: DEBUG - cloudera_manager_port
  debug:
    msg: "{{ cloudera_manager_port }}"
  when: debug | default(false)

- name: DEBUG - cloudera_manager_url
  debug:
    msg: "{{ cloudera_manager_url }}"
  when: debug | default(false)

- set_fact:
    truststore_location: "/tmp/truststore.jks"
  when: truststore_location is not defined

- name: Get truststore content into a file
  uri:
    url: "{{ cloudera_manager_api_url }}/certs/truststore?type=jks"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
    dest: "{{ truststore_location }}"
  register: cloudera_manager_truststore_content

- name: DEBUG - API truststore content
  debug:
    msg: "{{ cloudera_manager_truststore_content }}"
  when: debug | default(false)

- name: Get truststore password
  uri:
    url: "{{ cloudera_manager_api_url }}/certs/truststorePassword"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
  register: cloudera_manager_truststore_password_api

- name: DEBUG - API truststore password
  debug:
    msg: "{{ cloudera_manager_truststore_password_api }}"
  when: debug | default(false)

- set_fact:
    cloudera_manager_truststore_password: "{{ cloudera_manager_truststore_password_api.content }}"


- name: Get CM deployment
  uri:
    url: "{{ cloudera_manager_api_url }}/cm/deployment"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
    dest: /tmp/cloudera_manager_deployment.json
  register: cloudera_manager_deployment

- name: DEBUG - cloudera_manager_deployment
  debug:
    msg: "{{ cloudera_manager_deployment }}"
  when: debug | default(false)

- set_fact:
    cluster_name: "{{ cloudera_manager_deployment.json | community.general.json_query(query) }}"
  vars:
    query: "clusters[?clusterType == 'BASE_CLUSTER'].name | [0]"

- name: DEBUG - cluster_name
  debug:
    msg: "{{ cluster_name }}"
  when: debug | default(false)

- set_fact:
    cdp_version: "{{ cloudera_manager_deployment.json | community.general.json_query(query) }}"
  vars:
    query: "clusters[?clusterType == 'BASE_CLUSTER'].fullVersion | [0]"

- name: DEBUG - cdp_version
  debug:
    msg: "{{ cdp_version }}"
  when: debug | default(false)


- name: Get All services from CM
  uri:
    url: "{{ cloudera_manager_api_url }}/clusters/{{ cluster_name }}/services/"
    user: "{{ cloudera_manager_user }}"
    password: "{{ cloudera_manager_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
    return_content: yes
    validate_certs: no
    body_format: json
    dest: /tmp/cloudera_manager_all_services.json
  register: cloudera_manager_all_services

- name: DEBUG - cloudera_manager_all_services
  debug:
    msg: "{{ cloudera_manager_all_services }}"
  when: debug | default(false)
